services:
  gitlab:
    container_name: gitlab
    image: gitlab/gitlab-ce
    restart: always
    hostname: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab'
    ports:
      - '80:80'
      - '443:443'
      - '22:22'
    volumes:
      - '/srv/gitlab/config:/etc/gitlab'
      - '/srv/gitlab/logs:/var/log/gitlab'
      - '/srv/gitlab/data:/var/opt/gitlab'
    shm_size: '256m'
    networks:
      - gitlab-network

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    restart: always
    depends_on:
      - gitlab
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/srv/gitlab-runner/config:/etc/gitlab-runner'
    networks:
      - gitlab-network
    environment:
      - CI_SERVER_URL=http://gitlab  # Внутренний URL GitLab
      - REGISTRATION_TOKEN=glrt-ms27Rss6mmVPs7vLirbJ
      - RUNNER_NAME=my-runner
      - RUNNER_EXECUTOR=docker
      - DOCKER_IMAGE=docker:latest

  sonarqube:
    container_name: sonarqube
    image: sonarqube:community
    depends_on:
      - gitlab
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - gitlab-network

  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - sonar_postgresql:/var/lib/postgresql
      - sonar_postgresql_data:/var/lib/postgresql/data
    networks:
      - gitlab-network

networks:
  gitlab-network:
    external: true

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonar_postgresql:
  sonar_postgresql_data:

